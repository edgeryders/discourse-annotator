<% content_for(:javascript) do %>
  <script>
      function initCodeCheckboxes() {
          $("#bulk-editing-parent-id-field").each(function initializeSelectize(index, element) {
              let $element = $(element);
              $element.selectize({
                  valueField: 'id',
                  labelField: 'localized_path',
                  searchField: 'localized_path',
                  create: false,
                  searchUrl: "/annotator/projects/<%= @project.id %>/autosuggest_codes.json" + '?q=',
                  load: function (query, callback) {
                      if (!query.length) return callback();
                      let searchUrl = this.settings.searchUrl;
                      $.ajax({
                          url: searchUrl + encodeURIComponent(query),
                          type: 'GET',
                          error: function () {
                              callback();
                          },
                          success: function (res) {
                              callback(res);
                          }
                      });
                  },
              });
          });

          let checkboxValues = JSON.parse(localStorage.getItem('checkboxValues')) || {};
          let $checkboxes = $("#codes-collection :checkbox");

          updateSelectedIdsField();

          $.each(checkboxValues, function (key, value) {
              $("#code-" + key).prop('checked', value);
          });

          $checkboxes.on("change", function () {
              updateStorage();
          });

          $("#uncheck-all").on("click", function () {
              $checkboxes.prop("checked", false)
              updateStorage();
          });

          $("#check-all").on("click", function () {
              $checkboxes.prop("checked", true)
              updateStorage();
          });

          function updateStorage() {
              $checkboxes.each(function () {
                  checkboxValues[$(this).data('id')] = this.checked;
              });
              localStorage.setItem("checkboxValues", JSON.stringify(checkboxValues));
              updateSelectedIdsField();
          }

          function updateSelectedIdsField() {
              let checked = Object.keys(checkboxValues).filter(k => checkboxValues[k]);
              document.getElementById("bulk-editing-selected-ids").value = checked.join(',')
          }

      }

      $(document).ready(initCodeCheckboxes);

      // $('#bulk-editing-parent-id-field').selectize();

      function handleBulkEditSubmit() {
          localStorage.setItem("checkboxValues", null);
      }
  </script>
<% end %>


<style type="text/css">
  .selectize-control {
    width: 500px;
    display: inline-block;
  }

  .selectize-input {
    z-index: auto;
  }

  #check-all, #uncheck-all {
    font-size: .8em;
  }
</style>


<%= form_tag update_parent_annotator_discourse_annotator_project_codes_path(project_id: @project.id), method: :post, remote: false, id: 'bulk-editing-form', onSubmit: 'handleBulkEditSubmit();' do %>
  <input id="bulk-editing-selected-ids" type="hidden" name="selected_ids">
  Assign selected to parent:
  <div>
    <select id="bulk-editing-parent-id-field" name="parent_id"></select>
    <%= submit_tag("Save", style: 'vertical-align:top') %>
  </div>
  <div style="color:#777; font-size:.8rem;">
    Leave blank to move selected codes to the top level.
  </div>

  <div style="padding-top:2px; margin-top:4px; border-top:1px solid #DFE0E1;">
    <a href="#" id="check-all">[Check All]</a>
    <a href="#" id="uncheck-all">[Uncheck All]</a>
    <div style="color:#777; font-size:.8rem;">
      Only applied to codes on the current page.
    </div>
  </div>
<% end %>