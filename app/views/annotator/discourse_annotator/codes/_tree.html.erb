
<% content_for(:javascript) do %>
    <script>
        function initCodeCheckboxes() {
            $("#bulk-editing-parent-id-field").each(function initializeSelectize(index, element) {
                let $element = $(element);
                $element.selectize({
                    valueField: 'id',
                    labelField: 'localized_path',
                    searchField: 'localized_path',
                    create: false,
                    searchUrl: "/annotator/autosuggest_codes.json" + '?q=',
                    load: function (query, callback) {
                        if (!query.length) return callback();
                        let searchUrl = this.settings.searchUrl;
                        $.ajax({
                            url: searchUrl + encodeURIComponent(query),
                            type: 'GET',
                            error: function () {
                                callback();
                            },
                            success: function (res) {
                                callback(res);
                            }
                        });
                    },
                });
            });

            let checkboxValues = JSON.parse(localStorage.getItem('checkboxValues')) || {};
            let $checkboxes = $("#codes-collection :checkbox");

            updateSelectedIdsField();

            $.each(checkboxValues, function (key, value) {
                $("#code-" + key).prop('checked', value);
            });

            $checkboxes.on("change", function () {
                updateStorage();
            });

            $("#uncheck-all").on("click", function () {
                $checkboxes.prop("checked", false)
                updateStorage();
            });

            $("#check-all").on("click", function () {
                $checkboxes.prop("checked", true)
                updateStorage();
            });

            function updateStorage() {
                $checkboxes.each(function () {
                    checkboxValues[$(this).data('id')] = this.checked;
                });
                localStorage.setItem("checkboxValues", JSON.stringify(checkboxValues));
                updateSelectedIdsField();
            }

            function updateSelectedIdsField() {
                let checked = Object.keys(checkboxValues).filter(k => checkboxValues[k]);
                document.getElementById("bulk-editing-selected-ids").value = checked.join(',')
            }

        }

        $(document).ready(initCodeCheckboxes);


        // NOTE: Previous implementation.
        // jQuery(function ($) {
        //     $('.tree li:has(ul)').addClass('parent_li').find(' > span').attr('title', 'Collapse this branch');
        //     $('.tree li.parent_li > span').on('click', function (e) {
        //         var children;
        //         children = $(this).parent('li.parent_li').find(' > ul > li');
        //         if (children.is(':visible')) {
        //             children.hide('fast');
        //             $(this).attr('title', 'Expand this branch').find(' > i').addClass('fa-plus-circle').removeClass('fa-minus-circle');
        //         } else {
        //             children.show('fast');
        //             $(this).attr('title', 'Collapse this branch').find(' > i').addClass('fa-minus-circle').removeClass('fa-plus-circle');
        //         }
        //         e.stopPropagation();
        //     });
        // });
    </script>
<% end %>

<div class="tree">
  <ul>
    <% codes.each do |code| %>
        <%= render 'tree_item', code: code %>
    <% end %>
  </ul>
</div>
